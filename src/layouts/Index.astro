---
import bgImg from '$assets/clement-m-h7vKkZNNThE-unsplash.jpeg';
import bgImgDark from '$assets/nandhu-kumar-t9UpW8MUmtw-unsplash.jpg';
import Base from '$layouts/Base.astro';
import { getImage } from 'astro:assets';

const { title } = Astro.props.frontmatter;

const vars = {
  bgImg: `url(${(await getImage({ src: bgImg })).src})`,
  bgImgDark: `url(${(await getImage({ src: bgImgDark })).src})`,
};
---

<Base title={title}>
  <main><slot /></main>
  <footer>
    <a href="/colophon">Colophon</a>
  </footer>
</Base>

<style is:global define:vars={vars}>
  :root {
    --page-padding: 1.5rem;
  }

  body {
    align-items: center;
    display: flex;
    flex-direction: column;
    min-height: 100dvh;
    padding-inline: var(--page-padding);
    padding-top: var(--page-padding);

    background: #f8f8f8;
    background-image: linear-gradient(
      121deg,
      rgb(45, 61, 63, 0.2),
      transparent 60vh
    );
  }

  main {
    width: min(100%, 50ch);
  }

  main > * + * {
    margin-top: 0.7rem;
  }

  footer {
    aspect-ratio: 4608/2082; /* from bgImg */
    background-image: var(--bgImg);
    background-size: contain;
    display: grid;
    margin-top: auto;
    mask-image: linear-gradient(transparent, white 20%);
    width: 100dvw;
  }

  footer a {
    /* TODO is there a more resilient way to "force" dark mode for a given element? */
    --color-underline: rgba(255, 255, 255, 0.2);
    color: var(--color-white);
    margin: calc(var(--page-padding) * 0.8) var(--page-padding);
    place-self: end;
  }

  @media (prefers-color-scheme: dark) {
    body {
      /* TODO: tune colors */
      background: #1f1f1f;
      background-image: linear-gradient(
        121deg,
        rgb(146, 153, 105, 0.2),
        transparent 60vh
      );
    }

    footer {
      background-image: var(--bgImgDark);
      mask-image: linear-gradient(transparent, white 60%);
    }
  }

  @media screen and (min-width: 750px) {
    :root {
      --page-padding: 3rem;
    }
  }

  @media screen and (prefers-reduced-motion: no-preference) {
    main > * {
      animation-name: fade-in-text;
      animation-duration: 500ms;
      animation-fill-mode: backwards;
      animation-delay: calc((var(--animate-order) - 1) * 75ms);
    }

    /* TODO ugh */
    main > :nth-child(1) {
      --animate-order: 1;
    }
    main > :nth-child(2) {
      --animate-order: 2;
    }
    main > :nth-child(3) {
      --animate-order: 3;
    }

    @keyframes fade-in-text {
      from {
        filter: blur(5px);
        opacity: 0.3;
        transform: scale(1.02);
        translate: 0 -5px;
      }
    }
  }
</style>
